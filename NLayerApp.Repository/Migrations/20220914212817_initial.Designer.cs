// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayerApp.Repository;

#nullable disable

namespace NLayerApp.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220914212817_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NLayerApp.Core.Concretes.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 9, 15, 0, 28, 17, 183, DateTimeKind.Local).AddTicks(8796),
                            Name = "Ev & Mobilya"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 9, 15, 0, 28, 17, 183, DateTimeKind.Local).AddTicks(8804),
                            Name = "Kozmetik"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 9, 15, 0, 28, 17, 183, DateTimeKind.Local).AddTicks(8805),
                            Name = "Saat & Aksesuar"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 9, 15, 0, 28, 17, 183, DateTimeKind.Local).AddTicks(8806),
                            Name = "Elektronik"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 9, 15, 0, 28, 17, 183, DateTimeKind.Local).AddTicks(8807),
                            Name = "Sport & Outdoor"
                        });
                });

            modelBuilder.Entity("NLayerApp.Core.Concretes.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2022, 9, 15, 0, 28, 17, 183, DateTimeKind.Local).AddTicks(9078),
                            Name = "LAV Bardak Seti",
                            Price = 160.12m,
                            Stock = 120
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2022, 9, 15, 0, 28, 17, 183, DateTimeKind.Local).AddTicks(9082),
                            Name = "Laventin Cilt Beyazlatici Krem",
                            Price = 108.12m,
                            Stock = 242
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2022, 9, 15, 0, 28, 17, 183, DateTimeKind.Local).AddTicks(9083),
                            Name = "Casio A159wa-n1df Erkek Kol Saati",
                            Price = 370.12m,
                            Stock = 58
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2022, 9, 15, 0, 28, 17, 183, DateTimeKind.Local).AddTicks(9084),
                            Name = "Apple Iphone 11 64GB",
                            Price = 15549.12m,
                            Stock = 87
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2022, 9, 15, 0, 28, 17, 183, DateTimeKind.Local).AddTicks(9085),
                            Name = "Protein Ocean Whey Protein",
                            Price = 172.12m,
                            Stock = 1200
                        });
                });

            modelBuilder.Entity("NLayerApp.Core.Concretes.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Height")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Mavi",
                            Height = 12,
                            ProductId = 1,
                            Width = 5
                        },
                        new
                        {
                            Id = 2,
                            Color = "Beyaz",
                            Height = 8,
                            ProductId = 2,
                            Width = 3
                        },
                        new
                        {
                            Id = 3,
                            Color = "Gri",
                            Height = 4,
                            ProductId = 3,
                            Width = 4
                        },
                        new
                        {
                            Id = 4,
                            Color = "Siyah",
                            Height = 15,
                            ProductId = 4,
                            Width = 6
                        },
                        new
                        {
                            Id = 5,
                            Color = "Kahverengi",
                            Height = 20,
                            ProductId = 5,
                            Width = 18
                        });
                });

            modelBuilder.Entity("NLayerApp.Core.Concretes.Product", b =>
                {
                    b.HasOne("NLayerApp.Core.Concretes.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NLayerApp.Core.Concretes.ProductFeature", b =>
                {
                    b.HasOne("NLayerApp.Core.Concretes.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("NLayerApp.Core.Concretes.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NLayerApp.Core.Concretes.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("NLayerApp.Core.Concretes.Product", b =>
                {
                    b.Navigation("ProductFeature");
                });
#pragma warning restore 612, 618
        }
    }
}
